#include <SoftwareSerial.h>
#include <String.h>
/*************************************************** 
  An example for the Adafruit Thermocouple Sensor w/MAX31855K

  Designed specifically to work with the Adafruit Thermocouple Sensor
  ----> https://www.adafruit.com/products/269
 ****************************************************/
#include <SPI.h>
#include "Adafruit_MAX31855.h" //Thermocouple library
#include <SD.h> //SD Card library


#define numProbes 4

#define thermoCS1 2
#define thermoCS2 4
#define thermoCS3 6
#define thermoCS4 7

#define thermoCLK 10
#define thermoDO  12


// Initialize the Thermocouple
Adafruit_MAX31855 thermocouple1(thermoCLK, thermoCS1, thermoDO);
Adafruit_MAX31855 thermocouple2(thermoCLK, thermoCS2, thermoDO);
Adafruit_MAX31855 thermocouple3(thermoCLK, thermoCS3, thermoDO);
Adafruit_MAX31855 thermocouple4(thermoCLK, thermoCS4, thermoDO);
//Additional thermocouples...

// set up variables using the SD utility library functions:
Sd2Card card;
SdVolume volume;
SdFile root;

// The Sparkfun microSD shield uses pin 8 for CS
const int chipSelect = 8;

void setup()
{
 // Serial.begin(9600);
 Serial.begin(19200);                 // the GPRS baud rate 
 //GSMSerial.begin(19200);
 while(!Serial){
   ;//Wait for serial port to connect
 }
 delay(500);
 

  // Note that even if it's not used as the CS pin, the hardware SS pin
  // (10 on most Arduino boards, 53 on the Mega) must be left as an output
  // or the SD library functions will not work.

  pinMode(10, OUTPUT);


  // we'll use the initialization code from the utility libraries
  // since we're just testing if the card is working!
  if (!card.init(SPI_HALF_SPEED, chipSelect)) {
    /*Serial.println("initialization failed. Things to check:");
    Serial.println("* is a card is inserted?");
    Serial.println("* Is your wiring correct?");
    Serial.println("* did you change the chipSelect pin to match your shield or module?"); */
    return;
  } 

  // print the type and size of the first FAT-type volume
  uint32_t volumesize;
  volumesize = volume.blocksPerCluster();    // clusters are collections of blocks
  volumesize *= volume.clusterCount();       // we'll have a lot of clusters
  volumesize *= 512;                            // SD card blocks are always 512 bytes
  volumesize /= 1024;
  volumesize /= 1024;
  
  root.openRoot(volume);

  // list all files in the card with date and size
  root.ls(LS_R | LS_DATE | LS_SIZE);
  SD.begin(chipSelect);  
  File dataFile = SD.open("datalog.txt", FILE_WRITE);

  // if the file is available, write to it:
  if (dataFile) {
    dataFile.println("hello world");
    dataFile.close();
  }
  File myFile = SD.open("datalog.txt", FILE_READ);
  myFile.close();
  
}

void loop() {
  //Serial.println("Normal loop");
  SendTextMessage();
  delay(5000); //Thirty second delay
}

/*This code taken almost directly from the geeetech9000 tutorial at http://www.geeetech.com/wiki/index.php/Arduino_GPRS_Shield */
void SendTextMessage()
{
 Serial.println("AT+CMGF=1\r");    //Because we want to send the SMS in text mode
 delay(100);
 Serial.println("AT + CMGS = \"+16504680949\"");//send sms message, be careful need to add a country code before the cellphone number
// Serial.println("AT + CMGS = \"+14154647603\"");//send sms message, be careful need to add a country code before the cellphone number
 delay(100);
 
 String message = getTemperature(0);
 message += getTemperature(1);
 
 Serial.println(message);//the content of the message
 delay(100);
 Serial.println((char)26);//the ASCII code of the ctrl+z is 26
 delay(100);
 Serial.println();
}

String getTemperature(int probeNumber){
  double t1 = thermocouple1.readCelsius();
  double t2 = thermocouple1.readCelsius();
  double t3 = thermocouple1.readCelsius();
  double t4 = thermocouple1.readCelsius();
  
  String result = "Temp";
  result += String(probeNumber);
  result += ":";
  result += String(t1);
  result += ";";
  return result;
}
